# name: Build and Deploy to AKS

# on:
#   push:
#     branches:
#       - master  # Trigger the workflow on push to the 'master' branch 

# env:
#   DOCKER_IMAGE_NAME: ifeanyb/sampleapp  # Replace with your Docker image name
#   AKS_CLUSTER_NAME: matthewcluster  # Replace with your AKS cluster name
#   AKS_RESOURCE_GROUP: matthewrg  # Replace with your AKS resource group
  

# jobs:

#   build-and-push-image:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#     - name: Build and Push Docker Image
#       uses: docker/build-push-action@v3
#       with:
#         push: true
#         tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        
#   deploy-to-aks:
#     name: Deploy to AKS
#     needs: build-and-push-image
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
      
#     - name: Get credentials
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}
        
#     - name: Deploy to AKS
#       uses: azure/aks-set-context@v3
#       with:
#         resource-group: ${{ env.AKS_RESOURCE_GROUP }}
#         cluster-name: ${{ env.AKS_CLUSTER_NAME }}
        
#     - name: Deploy application
#       run: |
#         kubectl apply -f deployment.yaml
#         kubectl set image deployment/webapp-deployment webapp=${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

# name: Build, Deploy to AKS, and Deploy Helm Chart

# on:
#   push:
#     branches:
#       - master  # Trigger the workflow on push to the 'master' branch 

# env:
#   DOCKER_IMAGE_NAME: ifeanyb/sampleapp  # Replace with your Docker image name
#   AKS_CLUSTER_NAME: matthewcluster  # Replace with your AKS cluster name
#   AKS_RESOURCE_GROUP: matthewrg  # Replace with your AKS resource group
#   HELM_CHART_PATH: ./my-dotnet-app  # Path to your Helm chart directory
#   HELM_RELEASE_NAME: my-dotnet-app  # Name of the Helm release
#   HELM_IMAGE_REPOSITORY: ifeanyb/my-dotnet-app  # Docker image repository for Helm
  

# jobs:

#   build-and-push-image:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#     - name: Build and Push Docker Image
#       uses: docker/build-push-action@v3
#       with:
#         push: true
#         tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        
#   deploy-to-aks:
#     name: Deploy to AKS
#     needs: build-and-push-image
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
      
#     - name: Get credentials
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}
        
#     - name: Deploy to AKS
#       uses: azure/aks-set-context@v3
#       with:
#         resource-group: ${{ env.AKS_RESOURCE_GROUP }}
#         cluster-name: ${{ env.AKS_CLUSTER_NAME }}
        
#     - name: Deploy application
#       run: |
#         kubectl apply -f deployment.yaml
#         kubectl set image deployment/webapp-deployment webapp=${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        
#   deploy-helm-chart:
#     name: Deploy Helm Chart
#     needs: deploy-to-aks
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
      
#     - name: Get credentials
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}
        
#     - name: Set up AKS context
#       uses: azure/aks-set-context@v3
#       with:
#         resource-group: ${{ env.AKS_RESOURCE_GROUP }}
#         cluster-name: ${{ env.AKS_CLUSTER_NAME }}
      
#     - name: Set up Helm
#       uses: azure/setup-helm@v1
      
#     - name: Deploy Helm Chart
#       run: |
#         helm upgrade --install ${{ env.HELM_RELEASE_NAME }} ${{ env.HELM_CHART_PATH }} \
#         #   --set image.repository=${{ env.HELM_IMAGE_REPOSITORY }} \
#         #   --set image.tag=${{ github.sha }}

# name: Build and Deploy to AKS

# on:
#   push:
#     branches:
#       - master  # Trigger the workflow on push to the 'master' branch

# env:
#   DOCKER_IMAGE_NAME: ifeanyb/sampleapp  # Replace with your Docker image name
#   AKS_CLUSTER_NAME: matthewcluster  # Replace with your AKS cluster name
#   AKS_RESOURCE_GROUP: matthewrg  # Replace with your AKS resource group

# jobs:

#   build-and-push-image:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_HUB_USERNAME }}
#         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#     - name: Build and Push Docker Image
#       uses: docker/build-push-action@v3
#       with:
#         push: true
#         tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

#   deploy-to-aks:
#     name: Deploy to AKS
#     needs: build-and-push-image
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Login to Azure
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     - name: Set up AKS context
#       uses: azure/aks-set-context@v3
#       with:
#         resource-group: ${{ env.AKS_RESOURCE_GROUP }}
#         cluster-name: ${{ env.AKS_CLUSTER_NAME }}

#     - name: Deploy application
#       run: |
#         kubectl apply -f deployment.yaml
#         kubectl set image deployment/webapp-deployment webapp=${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

#   update-appsettings:
#     name: Update Application Settings
#     needs: deploy-to-aks
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Login to Azure
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     - name: Install Helm
#       uses: azure/setup-helm@v1

#     - name: Set up AKS context
#       uses: azure/aks-set-context@v3
#       with:
#         resource-group: ${{ env.AKS_RESOURCE_GROUP }}
#         cluster-name: ${{ env.AKS_CLUSTER_NAME }}

#     - name: Deploy Application Settings
#       run: |
#         helm upgrade --install my-dotnet-app ./my-dotnet-app
# name: Build and Deploy to AKS

# on:
#   push:
#     branches:
#       - master  # Trigger the workflow on push to the 'master' branch

# env:
#   DOCKER_IMAGE_NAME: ifeanyb/sampleapp  # Replace with your Docker image name
#   AKS_CLUSTER_NAME: matthewcluster  # Replace with your AKS cluster name
#   AKS_RESOURCE_GROUP: matthewrg  # Replace with your AKS resource group

# jobs:

#   build-and-push-image:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest
#     steps:

#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_HUB_USERNAME }}
#         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#     - name: Build and Push Docker Image
#       uses: docker/build-push-action@v3
#       with:
#         push: true
#         tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

#   deploy-to-aks:
#     name: Deploy to AKS
#     needs: build-and-push-image
#     runs-on: ubuntu-latest
#     steps:

#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Get credentials
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     - name: Deploy to AKS
#       uses: azure/aks-set-context@v3
#       with:
#         resource-group: ${{ env.AKS_RESOURCE_GROUP }}
#         cluster-name: ${{ env.AKS_CLUSTER_NAME }}

#     - name: Install Helm
#       uses: helm/kind-action@v1.5.0

#     - name: Package Helm Chart
#       uses: helm/chart-releaser-action@v1.5.0
#       with:
#         charts_dir: my-app-chart

#     - name: Deploy or Upgrade Helm Release
#       uses: Azure/k8s-deploy@v4
#       with:
#         manifests: |
#           cr-release-artifacts/my-app-chart-<version>.tgz
#         namespace: default
#         action: upgrade
#         releaseName: my-app
#         valueFile: my-app-chart/values.yaml
#         install: true

#     - name: Update Deployment Image
#       run: |
#         kubectl set image deployment/webapp-deployment webapp=${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

name: Build and Deploy to AKS - azure

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE_NAME: ifeanyb/sampleapp
  AKS_CLUSTER_NAME: matthewcluster
  AKS_RESOURCE_GROUP: matthewrg

jobs:

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  deploy-to-aks:
    name: Deploy to AKS
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get credentials
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to AKS
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: Install Helm
      uses: helm/kind-action@v1.5.0

    - name: Set CR Token
      env:
        CR_TOKEN: CRTOKEN

    - name: Package Helm Chart
      uses: helm/chart-releaser-action@v1.5.0
      with:
        charts_dir: my-app-chart

    - name: Deploy or Upgrade Helm Release
      uses: Azure/k8s-deploy@v4
      with:
        manifests: |
          cr-release-artifacts/my-app-chart-<version>.tgz
        namespace: default
        action: upgrade
      inputs:
        releaseName: my-app
        valueFile: my-app-chart/values.yaml
        install: true

    - name: Update Deployment Image
      run: |
        kubectl set image deployment/webapp-deployment webapp=${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}