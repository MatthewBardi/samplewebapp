apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: ifeanyb/sampleapp
        ports:
        - containerPort: 80
        volumeMounts:
        - name: appsettings
          mountPath: /app/config
      volumes:
      - name: appsettings
        secret:
          secretName: my-dotnet-app
      
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  selector:
    app: webapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: nginx
  rules:
  - host: cloudprophetess.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: webapp-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress
  namespace: default # Replace with the namespace where your deployment is running
spec:
  podSelector:
    matchLabels:
      app: webapp
  policyTypes:
  - Egress
  egress:
  - {}
  # - to:
  #   - ipBlock:
  #       cidr: 0.0.0.0/0
  #   ports:
  #   - port: 80
  #     protocol: TCP
  #   - port: 443
  #     protocol: TCP

# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: allow-egress
#   namespace: default # Replace with the namespace where your deployment is running
# spec:
#   podSelector:
#     matchLabels:
#       app: webapp # This selects the pods from your deployment
#   policyTypes:
#   - Egress
#   egress: [] # Block all egress traffic
